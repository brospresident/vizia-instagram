'use strict';

const morphdom = require('morphdom');

const createStore = require('./create-store');
const keyMetricComponent = require('../components/key-metric');

/**
 * App container class
 */
class App {
    constructor() {
        this.store = createStore();
        this.destTarget = null;
        this.el = document.createElement('div');
        this.unsubscribeFromStore = this.store.subscribe(this.onStoreChange.bind(this));
    }

    updateConfig(props) {
        this.store.dispatch({
            type: 'UPDATE_CONFIG',
            data: props
        });
    }

    updateData(data) {
        this.store.dispatch({
            type: 'UPDATE_DATA',
            data
        });
    }

    onStoreChange() {
        const state = this.store.getState();

        if (state.config.destTarget && this.destTarget === null) {
            this.destTarget = document.querySelector(state.config.destTarget);
            this.destTarget.appendChild(this.el);
        }

        if (state.data) {
            morphdom(this.el, keyMetricComponent(state));
        }
    }

    unmount() {
        this.unsubscribeFromStore();

        if (this.destTarget) {
            this.destTarget.removeChild(this.el);
        }
    }
}

module.exports = App;
