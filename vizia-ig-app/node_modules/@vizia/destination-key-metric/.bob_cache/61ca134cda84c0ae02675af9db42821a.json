{"remainingRequest":"/Users/pantu/.npm/_npx/12238/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/pantu/work2/vizia-ig-app/node_modules/@vizia/format/src/lib/get-format-parts.js","dependencies":[{"path":"/Users/pantu/work2/vizia-ig-app/node_modules/@vizia/format/src/lib/get-format-parts.js","mtime":1664781785127},{"path":"/Users/pantu/.npm/_npx/12238/lib/node_modules/@vizia/app-emulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pantu/.npm/_npx/12238/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKY29uc3QgZ2V0SW50bE51bWJlckZvcm1hdE9wdGlvbnMgPSByZXF1aXJlKCcuL2dldC1pbnRsLW9wdGlvbnMnKTsKCmNvbnN0IHJvdW5kID0gcmVxdWlyZSgnLi9yb3VuZCcpOwoKY29uc3QgbG9jYWxlRGF0YSA9IHJlcXVpcmUoJy4uL2xvY2FsZScpOwoKY29uc3QgZ2V0Um91bmRlZFZhbHVlID0gKHZhbHVlLCBfcmVmKSA9PiB7CiAgbGV0IHsKICAgIG1hbnRpc3NhLAogICAgZm9ybWF0CiAgfSA9IF9yZWY7CiAgcmV0dXJuIGZvcm1hdCA9PT0gJ3BlcmNlbnQnID8gcm91bmQodmFsdWUsIG1hbnRpc3NhICsgMikgOiByb3VuZCh2YWx1ZSwgbWFudGlzc2EpOwp9OwoKY29uc3QgZmxhdHRlbiA9IChtZW1vLCBpdGVtKSA9PiBbLi4ubWVtbywgLi4uKEFycmF5LmlzQXJyYXkoaXRlbSkgPyBpdGVtIDogW2l0ZW1dKV07Ci8qKgogKiBHZXQgb3JkaW5hbCBwYXJ0LgogKiBJbnRsIGRvZXMgbm90IHByb3ZpZGUgb3JkaW5hbCBzdWZmaXhlcywgc28gd2UgaGF2ZSB0byBhZGQgdGhlbS4KICovCgoKY29uc3QgZ2V0T3JkaW5hbFBhcnQgPSAodmFsdWUsIGxvY2FsZSkgPT4gewogIGNvbnN0IGJhc2VMb2NhbGUgPSBsb2NhbGUuc3BsaXQoJy0nKVswXTsKICBjb25zdCBvcmRpbmFsVmFsdWUgPSAobG9jYWxlRGF0YS5vcmRpbmFsW2Jhc2VMb2NhbGVdIHx8IGxvY2FsZURhdGEub3JkaW5hbC5vdGhlcikodmFsdWUpOwogIHJldHVybiB7CiAgICB0eXBlOiAnb3JkaW5hbCcsCiAgICB2YWx1ZTogb3JkaW5hbFZhbHVlCiAgfTsKfTsKLyoqCiAqIEJ1aWxkcyBhbiBhcnJheSBvZiBmb3JtYXR0ZWQgcGFydHMgYmFzZWQgb24gZm9ybWF0LgogKi8KCgpjb25zdCBnZXRPdGhlckZvcm1hdFBhcnRzID0gKHZhbHVlLCBwcm9wcykgPT4gewogIGNvbnN0IHsKICAgIGZvcm1hdCwKICAgIGxvY2FsZQogIH0gPSBwcm9wczsKICBjb25zdCByb3VuZGVkVmFsdWUgPSBnZXRSb3VuZGVkVmFsdWUodmFsdWUsIHByb3BzKTsKICBjb25zdCBpbnRsTnVtYmVyRm9ybWF0T3B0aW9ucyA9IGdldEludGxOdW1iZXJGb3JtYXRPcHRpb25zKHJvdW5kZWRWYWx1ZSwgcHJvcHMpOwogIGNvbnN0IGludGxOdW1iZXJGb3JtYXQgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQobG9jYWxlLCBpbnRsTnVtYmVyRm9ybWF0T3B0aW9ucyk7CiAgY29uc3QgZm9ybWF0UGFydHMgPSBpbnRsTnVtYmVyRm9ybWF0LmZvcm1hdFRvUGFydHMocm91bmRlZFZhbHVlKTsKICBjb25zdCBvcmRpbmFsUGFydCA9IGZvcm1hdCA9PT0gJ29yZGluYWwnID8gZ2V0T3JkaW5hbFBhcnQocm91bmRlZFZhbHVlLCBsb2NhbGUpIDogbnVsbDsKICByZXR1cm4gZm9ybWF0UGFydHMgLy8gU3BsaXQgaW50ZWdlci9mcmFjdGlvbiBpbnRvIHNlcGFyYXRlIHNpbmdsZS1kaWdpdCBwYXJ0czsKICAubWFwKHBhcnQgPT4gewogICAgY29uc3QgewogICAgICB0eXBlLAogICAgICB2YWx1ZQogICAgfSA9IHBhcnQ7CgogICAgaWYgKFsnaW50ZWdlcicsICdmcmFjdGlvbiddLmluY2x1ZGVzKHR5cGUpKSB7CiAgICAgIHJldHVybiB2YWx1ZS5zcGxpdCgnJykubWFwKHZhbHVlID0+ICh7CiAgICAgICAgdHlwZSwKICAgICAgICB2YWx1ZQogICAgICB9KSk7CiAgICB9CgogICAgcmV0dXJuIHBhcnQ7CiAgfSkgLy8gQWRkIGFkZGl0aW9uYWwgb3JkaW5hbCBwYXJ0CiAgLmNvbmNhdChvcmRpbmFsUGFydCB8fCBbXSkgLy8gRmxhdHRlbiB0byBzaW5nbGUgYXJyYXkKICAucmVkdWNlKGZsYXR0ZW4sIFtdKTsKfTsKLyoqCiAqIEJyZWFrcyBkb3duIGR1cmF0aW9uIGludG8gaHVtYW5pemVkIGdyYW51bGFyIHVuaXRzLgogKi8KCgpjb25zdCBnZXREdXJhdGlvbkZvcm1hdFBhcnRzID0gKHZhbHVlLCBwcm9wcykgPT4gewogIC8vIEtlZXAgY2FzdWFsIGNvbnZlcnNpb25zLCBhcyB0aGlzIGlzIG9ubHkgZm9yIGh1bWFuaXppbmcKICBjb25zdCB1bml0cyA9IFtbJ3llYXInLCAzNjUgKiAyNCAqIDYwICogNjAgKiAxMDAwXSwgWydtb250aCcsIDMwICogMjQgKiA2MCAqIDYwICogMTAwMF0sIFsnd2VlaycsIDcgKiAyNCAqIDYwICogNjAgKiAxMDAwXSwgWydkYXknLCAyNCAqIDYwICogNjAgKiAxMDAwXSwgWydob3VyJywgNjAgKiA2MCAqIDEwMDBdLCBbJ21pbnV0ZScsIDYwICogMTAwMF0sIFsnc2Vjb25kJywgMTAwMF0sIFsnbWlsbGlzZWNvbmQnLCAxXV07CiAgY29uc3QgewogICAgcmVsZXZhbnRVbml0cwogIH0gPSB1bml0cy5yZWR1Y2UoKF9yZWYyLCBfcmVmMykgPT4gewogICAgbGV0IHsKICAgICAgcmVtYWluaW5nVmFsdWUsCiAgICAgIHJlbGV2YW50VW5pdHMKICAgIH0gPSBfcmVmMjsKICAgIGxldCBbdW5pdE5hbWUsIHVuaXRWYWx1ZV0gPSBfcmVmMzsKICAgIGNvbnN0IHRvdGFsVW5pdHMgPSBNYXRoLnJvdW5kKHJlbWFpbmluZ1ZhbHVlIC8gdW5pdFZhbHVlLCAwKTsKCiAgICBpZiAodG90YWxVbml0cyA8IDEpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICByZW1haW5pbmdWYWx1ZSwKICAgICAgICByZWxldmFudFVuaXRzCiAgICAgIH07CiAgICB9CgogICAgcmV0dXJuIHsKICAgICAgcmVtYWluaW5nVmFsdWU6IHJlbWFpbmluZ1ZhbHVlIC0gdW5pdFZhbHVlICogdG90YWxVbml0cywKICAgICAgcmVsZXZhbnRVbml0czogWy4uLnJlbGV2YW50VW5pdHMsIFt1bml0TmFtZSwgdW5pdFZhbHVlLCB0b3RhbFVuaXRzXV0KICAgIH07CiAgfSwgewogICAgcmVtYWluaW5nVmFsdWU6IHZhbHVlLAogICAgcmVsZXZhbnRVbml0czogW10KICB9KTsKICByZXR1cm4gKHJlbGV2YW50VW5pdHMubGVuZ3RoID8gcmVsZXZhbnRVbml0cyA6IFtbLi4udW5pdHNbdW5pdHMubGVuZ3RoIC0gMV0sIDBdXSAvLyBPbmx5IHRha2UgdGhlIGxhcmdlc3QgMiB1bml0cwogICkuc2xpY2UoMCwgMikgLy8gR2V0IGZvcm1hdCBwYXJ0cyBwZXIgdW5pdAogIC5tYXAoX3JlZjQgPT4gewogICAgbGV0IFt1bml0TmFtZSwsIHRvdGFsVW5pdHNdID0gX3JlZjQ7CiAgICByZXR1cm4gZ2V0T3RoZXJGb3JtYXRQYXJ0cyh0b3RhbFVuaXRzLCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywgewogICAgICBmb3JtYXQ6IHVuaXROYW1lCiAgICB9KSk7CiAgfSkgLy8gQWRkIGEgc3BhY2UgY2hhcmFjdGVyIGJldHdlZW4gdW5pdHMKICAubWFwKCh1bml0UGFydHMsIGksIGNvbGxlY3Rpb24pID0+IHsKICAgIGlmIChpIDwgY29sbGVjdGlvbi5sZW5ndGggLSAxKSB7CiAgICAgIHJldHVybiBbLi4udW5pdFBhcnRzLCB7CiAgICAgICAgdHlwZTogJ2xpdGVyYWwnLAogICAgICAgIHZhbHVlOiAnICcKICAgICAgfV07CiAgICB9CgogICAgcmV0dXJuIHVuaXRQYXJ0czsKICB9KSAvLyBGbGF0dGVuIHRvIHNpbmdsZSBhcnJheQogIC5yZWR1Y2UoZmxhdHRlbiwgW10pOwp9OwovKioKICogQnVpbGRzIGFuIGFycmF5IG9mIGZvcm1hdHRlZCBwYXJ0cyBiYXNlZCBvbiBpbnB1dC4KICogV2UgZXh0ZW5kIHRoZSByZXN1bHQgb2YgSW50bCdzIGZvcm1hdFRvUGFydHMgd2l0aCBvdXIgb3duIHBhcnRzIHRvIGdldCBtb3JlIGZpbmUgY29udHJvbCBvdmVyIGZvcm1hdHRpbmcuCiAqIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9OdW1iZXJGb3JtYXQvZm9ybWF0VG9QYXJ0cwogKi8KCgpjb25zdCBnZXRGb3JtYXRQYXJ0cyA9ICh2YWx1ZSwgcHJvcHMpID0+IHsKICBjb25zdCB7CiAgICBmb3JtYXQKICB9ID0gcHJvcHM7CgogIGlmIChmb3JtYXQgPT09ICdkdXJhdGlvbicpIHsKICAgIHJldHVybiBnZXREdXJhdGlvbkZvcm1hdFBhcnRzKHZhbHVlLCBwcm9wcyk7CiAgfQoKICByZXR1cm4gZ2V0T3RoZXJGb3JtYXRQYXJ0cyh2YWx1ZSwgcHJvcHMpOwp9OwoKbW9kdWxlLmV4cG9ydHMgPSBnZXRGb3JtYXRQYXJ0czs="},{"version":3,"names":["getIntlNumberFormatOptions","require","round","localeData","getRoundedValue","value","mantissa","format","flatten","memo","item","Array","isArray","getOrdinalPart","locale","baseLocale","split","ordinalValue","ordinal","other","type","getOtherFormatParts","props","roundedValue","intlNumberFormatOptions","intlNumberFormat","Intl","NumberFormat","formatParts","formatToParts","ordinalPart","map","part","includes","concat","reduce","getDurationFormatParts","units","relevantUnits","remainingValue","unitName","unitValue","totalUnits","Math","length","slice","Object","assign","unitParts","i","collection","getFormatParts","module","exports"],"sources":["/Users/pantu/work2/vizia-ig-app/node_modules/@vizia/format/src/lib/get-format-parts.js"],"sourcesContent":["'use strict';\n\nconst getIntlNumberFormatOptions = require('./get-intl-options');\nconst round = require('./round');\nconst localeData = require('../locale');\n\nconst getRoundedValue = (value, {mantissa, format}) => {\n    return format === 'percent' ? round(value, mantissa + 2) : round(value, mantissa);\n};\n\nconst flatten = (memo, item) => [\n    ...memo,\n    ...(Array.isArray(item) ? item : [item])\n];\n\n/**\n * Get ordinal part.\n * Intl does not provide ordinal suffixes, so we have to add them.\n */\nconst getOrdinalPart = (value, locale) => {\n    const baseLocale = locale.split('-')[0];\n    const ordinalValue = (localeData.ordinal[baseLocale] || localeData.ordinal.other)(value);\n\n    return {type: 'ordinal', value: ordinalValue};\n};\n\n/**\n * Builds an array of formatted parts based on format.\n */\nconst getOtherFormatParts = (value, props) => {\n    const {format, locale} = props;\n    const roundedValue = getRoundedValue(value, props);\n    const intlNumberFormatOptions = getIntlNumberFormatOptions(roundedValue, props);\n    const intlNumberFormat = new Intl.NumberFormat(locale, intlNumberFormatOptions);\n    const formatParts = intlNumberFormat.formatToParts(roundedValue);\n    const ordinalPart = (\n        format === 'ordinal'\n    ) ? getOrdinalPart(roundedValue, locale) : null;\n\n    return formatParts\n        // Split integer/fraction into separate single-digit parts;\n        .map((part) => {\n            const {type, value} = part;\n            if (['integer', 'fraction'].includes(type)) {\n                return value\n                    .split('')\n                    .map((value) => ({type, value}));\n            }\n            return part;\n        })\n        // Add additional ordinal part\n        .concat(ordinalPart || [])\n        // Flatten to single array\n        .reduce(flatten, []);\n};\n\n/**\n * Breaks down duration into humanized granular units.\n */\nconst getDurationFormatParts = (value, props) => {\n    // Keep casual conversions, as this is only for humanizing\n    const units = [\n        ['year', 365 * 24 * 60 * 60 * 1000],\n        ['month', 30 * 24 * 60 * 60 * 1000],\n        ['week', 7 * 24 * 60 * 60 * 1000],\n        ['day', 24 * 60 * 60 * 1000],\n        ['hour', 60 * 60 * 1000],\n        ['minute', 60 * 1000],\n        ['second', 1000],\n        ['millisecond', 1]\n    ];\n\n    const {relevantUnits} = units\n        .reduce(({remainingValue, relevantUnits}, [unitName, unitValue]) => {\n            const totalUnits = Math.round(remainingValue / unitValue, 0);\n\n            if (totalUnits < 1) {\n                return {remainingValue, relevantUnits};\n            }\n            return {\n                remainingValue: remainingValue - (unitValue * totalUnits),\n                relevantUnits: [...relevantUnits, [unitName, unitValue, totalUnits]]\n            };\n        }, {\n            remainingValue: value,\n            relevantUnits: []\n        });\n\n    return (relevantUnits.length ? relevantUnits : [[...units[units.length - 1], 0]])\n        // Only take the largest 2 units\n        .slice(0, 2)\n        // Get format parts per unit\n        .map(([unitName, , totalUnits]) => {\n            return getOtherFormatParts(totalUnits, Object.assign({}, props, {\n                format: unitName\n            }));\n        })\n        // Add a space character between units\n        .map((unitParts, i, collection) => {\n            if (i < collection.length - 1) {\n                return [\n                    ...unitParts,\n                    {type: 'literal', value: ' '}\n                ];\n            }\n            return unitParts;\n        })\n        // Flatten to single array\n        .reduce(flatten, []);\n};\n\n/**\n * Builds an array of formatted parts based on input.\n * We extend the result of Intl's formatToParts with our own parts to get more fine control over formatting.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat/formatToParts\n */\nconst getFormatParts = (value, props) => {\n    const {format} = props;\n\n    if (format === 'duration') {\n        return getDurationFormatParts(value, props);\n    }\n    return getOtherFormatParts(value, props);\n};\n\nmodule.exports = getFormatParts;\n"],"mappings":"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"}]}