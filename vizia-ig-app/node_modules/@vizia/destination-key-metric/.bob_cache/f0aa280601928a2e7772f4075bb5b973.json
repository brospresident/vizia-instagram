{"remainingRequest":"/Users/pantu/.npm/_npx/56985/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/pantu/Desktop/vizia/node_modules/morphdom/dist/morphdom.js","dependencies":[{"path":"/Users/pantu/Desktop/vizia/node_modules/morphdom/dist/morphdom.js","mtime":499162500000},{"path":"/Users/pantu/.npm/_npx/56985/lib/node_modules/@vizia/app-emulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pantu/.npm/_npx/56985/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DOCUMENT_FRAGMENT_NODE","morphAttrs","fromNode","toNode","toNodeAttrs","attributes","attr","attrName","attrNamespaceURI","attrValue","fromValue","nodeType","i","length","name","namespaceURI","value","localName","getAttributeNS","prefix","setAttributeNS","getAttribute","setAttribute","fromNodeAttrs","d","hasAttributeNS","removeAttributeNS","hasAttribute","removeAttribute","range","NS_XHTML","doc","document","undefined","HAS_TEMPLATE_SUPPORT","createElement","HAS_RANGE_SUPPORT","createRange","createFragmentFromTemplate","str","template","innerHTML","content","childNodes","createFragmentFromRange","selectNode","body","fragment","createContextualFragment","createFragmentFromWrap","toElement","trim","compareNodeNames","fromEl","toEl","fromNodeName","nodeName","toNodeName","fromCodeStart","toCodeStart","charCodeAt","toUpperCase","createElementNS","moveChildren","curChild","firstChild","nextChild","nextSibling","appendChild","syncBooleanAttrProp","specialElHandlers","OPTION","parentNode","parentName","selected","selectedIndex","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","optgroup","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE$1","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","node","id","morphdomFactory","morphdom","options","toNodeHtml","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","Object","create","keyedRemovalList","addKeyedRemoval","key","push","walkDiscardedChildNodes","skipKeyedNodes","removeNode","removeChild","indexTree","handleNodeAdded","el","unmatchedFromEl","replaceChild","morphEl","cleanupFromEl","curFromNodeChild","curFromNodeKey","fromNextSibling","toElKey","morphChildren","curToNodeChild","curToNodeKey","toNextSibling","matchingFromEl","outer","isSameNode","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","actualize","ownerDocument","specialElHandler","morphedNode","morphedNodeType","toNodeType","len","elToRemove","module","exports"],"sources":["/Users/pantu/Desktop/vizia/node_modules/morphdom/dist/morphdom.js"],"sourcesContent":["'use strict';\n\nvar DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nmodule.exports = morphdom;\n"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAG,EAA7B;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsC;EAClC,IAAIC,WAAW,GAAGD,MAAM,CAACE,UAAzB;EACA,IAAIC,IAAJ;EACA,IAAIC,QAAJ;EACA,IAAIC,gBAAJ;EACA,IAAIC,SAAJ;EACA,IAAIC,SAAJ,CANkC,CAQlC;;EACA,IAAIP,MAAM,CAACQ,QAAP,KAAoBX,sBAApB,IAA8CE,QAAQ,CAACS,QAAT,KAAsBX,sBAAxE,EAAgG;IAC9F;EACD,CAXiC,CAalC;;;EACA,KAAK,IAAIY,CAAC,GAAGR,WAAW,CAACS,MAAZ,GAAqB,CAAlC,EAAqCD,CAAC,IAAI,CAA1C,EAA6CA,CAAC,EAA9C,EAAkD;IAC9CN,IAAI,GAAGF,WAAW,CAACQ,CAAD,CAAlB;IACAL,QAAQ,GAAGD,IAAI,CAACQ,IAAhB;IACAN,gBAAgB,GAAGF,IAAI,CAACS,YAAxB;IACAN,SAAS,GAAGH,IAAI,CAACU,KAAjB;;IAEA,IAAIR,gBAAJ,EAAsB;MAClBD,QAAQ,GAAGD,IAAI,CAACW,SAAL,IAAkBV,QAA7B;MACAG,SAAS,GAAGR,QAAQ,CAACgB,cAAT,CAAwBV,gBAAxB,EAA0CD,QAA1C,CAAZ;;MAEA,IAAIG,SAAS,KAAKD,SAAlB,EAA6B;QACzB,IAAIH,IAAI,CAACa,MAAL,KAAgB,OAApB,EAA4B;UACxBZ,QAAQ,GAAGD,IAAI,CAACQ,IAAhB,CADwB,CACF;QACzB;;QACDZ,QAAQ,CAACkB,cAAT,CAAwBZ,gBAAxB,EAA0CD,QAA1C,EAAoDE,SAApD;MACH;IACJ,CAVD,MAUO;MACHC,SAAS,GAAGR,QAAQ,CAACmB,YAAT,CAAsBd,QAAtB,CAAZ;;MAEA,IAAIG,SAAS,KAAKD,SAAlB,EAA6B;QACzBP,QAAQ,CAACoB,YAAT,CAAsBf,QAAtB,EAAgCE,SAAhC;MACH;IACJ;EACJ,CArCiC,CAuClC;EACA;;;EACA,IAAIc,aAAa,GAAGrB,QAAQ,CAACG,UAA7B;;EAEA,KAAK,IAAImB,CAAC,GAAGD,aAAa,CAACV,MAAd,GAAuB,CAApC,EAAuCW,CAAC,IAAI,CAA5C,EAA+CA,CAAC,EAAhD,EAAoD;IAChDlB,IAAI,GAAGiB,aAAa,CAACC,CAAD,CAApB;IACAjB,QAAQ,GAAGD,IAAI,CAACQ,IAAhB;IACAN,gBAAgB,GAAGF,IAAI,CAACS,YAAxB;;IAEA,IAAIP,gBAAJ,EAAsB;MAClBD,QAAQ,GAAGD,IAAI,CAACW,SAAL,IAAkBV,QAA7B;;MAEA,IAAI,CAACJ,MAAM,CAACsB,cAAP,CAAsBjB,gBAAtB,EAAwCD,QAAxC,CAAL,EAAwD;QACpDL,QAAQ,CAACwB,iBAAT,CAA2BlB,gBAA3B,EAA6CD,QAA7C;MACH;IACJ,CAND,MAMO;MACH,IAAI,CAACJ,MAAM,CAACwB,YAAP,CAAoBpB,QAApB,CAAL,EAAoC;QAChCL,QAAQ,CAAC0B,eAAT,CAAyBrB,QAAzB;MACH;IACJ;EACJ;AACJ;;AAED,IAAIsB,KAAJ,C,CAAW;;AACX,IAAIC,QAAQ,GAAG,8BAAf;AAEA,IAAIC,GAAG,GAAG,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,QAAxD;AACA,IAAIE,oBAAoB,GAAG,CAAC,CAACH,GAAF,IAAS,aAAaA,GAAG,CAACI,aAAJ,CAAkB,UAAlB,CAAjD;AACA,IAAIC,iBAAiB,GAAG,CAAC,CAACL,GAAF,IAASA,GAAG,CAACM,WAAb,IAA4B,8BAA8BN,GAAG,CAACM,WAAJ,EAAlF;;AAEA,SAASC,0BAAT,CAAoCC,GAApC,EAAyC;EACrC,IAAIC,QAAQ,GAAGT,GAAG,CAACI,aAAJ,CAAkB,UAAlB,CAAf;EACAK,QAAQ,CAACC,SAAT,GAAqBF,GAArB;EACA,OAAOC,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,CAA4B,CAA5B,CAAP;AACH;;AAED,SAASC,uBAAT,CAAiCL,GAAjC,EAAsC;EAClC,IAAI,CAACV,KAAL,EAAY;IACRA,KAAK,GAAGE,GAAG,CAACM,WAAJ,EAAR;IACAR,KAAK,CAACgB,UAAN,CAAiBd,GAAG,CAACe,IAArB;EACH;;EAED,IAAIC,QAAQ,GAAGlB,KAAK,CAACmB,wBAAN,CAA+BT,GAA/B,CAAf;EACA,OAAOQ,QAAQ,CAACJ,UAAT,CAAoB,CAApB,CAAP;AACH;;AAED,SAASM,sBAAT,CAAgCV,GAAhC,EAAqC;EACjC,IAAIQ,QAAQ,GAAGhB,GAAG,CAACI,aAAJ,CAAkB,MAAlB,CAAf;EACAY,QAAQ,CAACN,SAAT,GAAqBF,GAArB;EACA,OAAOQ,QAAQ,CAACJ,UAAT,CAAoB,CAApB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,SAAT,CAAmBX,GAAnB,EAAwB;EACpBA,GAAG,GAAGA,GAAG,CAACY,IAAJ,EAAN;;EACA,IAAIjB,oBAAJ,EAA0B;IACxB;IACA;IACA;IACA,OAAOI,0BAA0B,CAACC,GAAD,CAAjC;EACD,CALD,MAKO,IAAIH,iBAAJ,EAAuB;IAC5B,OAAOQ,uBAAuB,CAACL,GAAD,CAA9B;EACD;;EAED,OAAOU,sBAAsB,CAACV,GAAD,CAA7B;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASa,gBAAT,CAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;EACpC,IAAIC,YAAY,GAAGF,MAAM,CAACG,QAA1B;EACA,IAAIC,UAAU,GAAGH,IAAI,CAACE,QAAtB;EACA,IAAIE,aAAJ,EAAmBC,WAAnB;;EAEA,IAAIJ,YAAY,KAAKE,UAArB,EAAiC;IAC7B,OAAO,IAAP;EACH;;EAEDC,aAAa,GAAGH,YAAY,CAACK,UAAb,CAAwB,CAAxB,CAAhB;EACAD,WAAW,GAAGF,UAAU,CAACG,UAAX,CAAsB,CAAtB,CAAd,CAVoC,CAYpC;EACA;EACA;EACA;;EACA,IAAIF,aAAa,IAAI,EAAjB,IAAuBC,WAAW,IAAI,EAA1C,EAA8C;IAAE;IAC5C,OAAOJ,YAAY,KAAKE,UAAU,CAACI,WAAX,EAAxB;EACH,CAFD,MAEO,IAAIF,WAAW,IAAI,EAAf,IAAqBD,aAAa,IAAI,EAA1C,EAA8C;IAAE;IACnD,OAAOD,UAAU,KAAKF,YAAY,CAACM,WAAb,EAAtB;EACH,CAFM,MAEA;IACH,OAAO,KAAP;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBhD,IAAzB,EAA+BC,YAA/B,EAA6C;EACzC,OAAO,CAACA,YAAD,IAAiBA,YAAY,KAAKe,QAAlC,GACHC,GAAG,CAACI,aAAJ,CAAkBrB,IAAlB,CADG,GAEHiB,GAAG,CAAC+B,eAAJ,CAAoB/C,YAApB,EAAkCD,IAAlC,CAFJ;AAGH;AAED;AACA;AACA;;;AACA,SAASiD,YAAT,CAAsBV,MAAtB,EAA8BC,IAA9B,EAAoC;EAChC,IAAIU,QAAQ,GAAGX,MAAM,CAACY,UAAtB;;EACA,OAAOD,QAAP,EAAiB;IACb,IAAIE,SAAS,GAAGF,QAAQ,CAACG,WAAzB;IACAb,IAAI,CAACc,WAAL,CAAiBJ,QAAjB;IACAA,QAAQ,GAAGE,SAAX;EACH;;EACD,OAAOZ,IAAP;AACH;;AAED,SAASe,mBAAT,CAA6BhB,MAA7B,EAAqCC,IAArC,EAA2CxC,IAA3C,EAAiD;EAC7C,IAAIuC,MAAM,CAACvC,IAAD,CAAN,KAAiBwC,IAAI,CAACxC,IAAD,CAAzB,EAAiC;IAC7BuC,MAAM,CAACvC,IAAD,CAAN,GAAewC,IAAI,CAACxC,IAAD,CAAnB;;IACA,IAAIuC,MAAM,CAACvC,IAAD,CAAV,EAAkB;MACduC,MAAM,CAAC/B,YAAP,CAAoBR,IAApB,EAA0B,EAA1B;IACH,CAFD,MAEO;MACHuC,MAAM,CAACzB,eAAP,CAAuBd,IAAvB;IACH;EACJ;AACJ;;AAED,IAAIwD,iBAAiB,GAAG;EACpBC,MAAM,EAAE,UAASlB,MAAT,EAAiBC,IAAjB,EAAuB;IAC3B,IAAIkB,UAAU,GAAGnB,MAAM,CAACmB,UAAxB;;IACA,IAAIA,UAAJ,EAAgB;MACZ,IAAIC,UAAU,GAAGD,UAAU,CAAChB,QAAX,CAAoBK,WAApB,EAAjB;;MACA,IAAIY,UAAU,KAAK,UAAnB,EAA+B;QAC3BD,UAAU,GAAGA,UAAU,CAACA,UAAxB;QACAC,UAAU,GAAGD,UAAU,IAAIA,UAAU,CAAChB,QAAX,CAAoBK,WAApB,EAA3B;MACH;;MACD,IAAIY,UAAU,KAAK,QAAf,IAA2B,CAACD,UAAU,CAAC7C,YAAX,CAAwB,UAAxB,CAAhC,EAAqE;QACjE,IAAI0B,MAAM,CAAC1B,YAAP,CAAoB,UAApB,KAAmC,CAAC2B,IAAI,CAACoB,QAA7C,EAAuD;UACnD;UACA;UACA;UACArB,MAAM,CAAC/B,YAAP,CAAoB,UAApB,EAAgC,UAAhC;UACA+B,MAAM,CAACzB,eAAP,CAAuB,UAAvB;QACH,CAPgE,CAQjE;QACA;QACA;;;QACA4C,UAAU,CAACG,aAAX,GAA2B,CAAC,CAA5B;MACH;IACJ;;IACDN,mBAAmB,CAAChB,MAAD,EAASC,IAAT,EAAe,UAAf,CAAnB;EACH,CAxBmB;;EAyBpB;AACJ;AACA;AACA;AACA;AACA;EACIsB,KAAK,EAAE,UAASvB,MAAT,EAAiBC,IAAjB,EAAuB;IAC1Be,mBAAmB,CAAChB,MAAD,EAASC,IAAT,EAAe,SAAf,CAAnB;IACAe,mBAAmB,CAAChB,MAAD,EAASC,IAAT,EAAe,UAAf,CAAnB;;IAEA,IAAID,MAAM,CAACrC,KAAP,KAAiBsC,IAAI,CAACtC,KAA1B,EAAiC;MAC7BqC,MAAM,CAACrC,KAAP,GAAesC,IAAI,CAACtC,KAApB;IACH;;IAED,IAAI,CAACsC,IAAI,CAAC3B,YAAL,CAAkB,OAAlB,CAAL,EAAiC;MAC7B0B,MAAM,CAACzB,eAAP,CAAuB,OAAvB;IACH;EACJ,CA1CmB;EA4CpBiD,QAAQ,EAAE,UAASxB,MAAT,EAAiBC,IAAjB,EAAuB;IAC7B,IAAIwB,QAAQ,GAAGxB,IAAI,CAACtC,KAApB;;IACA,IAAIqC,MAAM,CAACrC,KAAP,KAAiB8D,QAArB,EAA+B;MAC3BzB,MAAM,CAACrC,KAAP,GAAe8D,QAAf;IACH;;IAED,IAAIb,UAAU,GAAGZ,MAAM,CAACY,UAAxB;;IACA,IAAIA,UAAJ,EAAgB;MACZ;MACA;MACA,IAAIc,QAAQ,GAAGd,UAAU,CAACe,SAA1B;;MAEA,IAAID,QAAQ,IAAID,QAAZ,IAAyB,CAACA,QAAD,IAAaC,QAAQ,IAAI1B,MAAM,CAAC4B,WAA7D,EAA2E;QACvE;MACH;;MAEDhB,UAAU,CAACe,SAAX,GAAuBF,QAAvB;IACH;EACJ,CA9DmB;EA+DpBI,MAAM,EAAE,UAAS7B,MAAT,EAAiBC,IAAjB,EAAuB;IAC3B,IAAI,CAACA,IAAI,CAAC3B,YAAL,CAAkB,UAAlB,CAAL,EAAoC;MAChC,IAAIgD,aAAa,GAAG,CAAC,CAArB;MACA,IAAI/D,CAAC,GAAG,CAAR,CAFgC,CAGhC;MACA;MACA;MACA;;MACA,IAAIoD,QAAQ,GAAGX,MAAM,CAACY,UAAtB;MACA,IAAIkB,QAAJ;MACA,IAAI3B,QAAJ;;MACA,OAAMQ,QAAN,EAAgB;QACZR,QAAQ,GAAGQ,QAAQ,CAACR,QAAT,IAAqBQ,QAAQ,CAACR,QAAT,CAAkBK,WAAlB,EAAhC;;QACA,IAAIL,QAAQ,KAAK,UAAjB,EAA6B;UACzB2B,QAAQ,GAAGnB,QAAX;UACAA,QAAQ,GAAGmB,QAAQ,CAAClB,UAApB;QACH,CAHD,MAGO;UACH,IAAIT,QAAQ,KAAK,QAAjB,EAA2B;YACvB,IAAIQ,QAAQ,CAACrC,YAAT,CAAsB,UAAtB,CAAJ,EAAuC;cACnCgD,aAAa,GAAG/D,CAAhB;cACA;YACH;;YACDA,CAAC;UACJ;;UACDoD,QAAQ,GAAGA,QAAQ,CAACG,WAApB;;UACA,IAAI,CAACH,QAAD,IAAamB,QAAjB,EAA2B;YACvBnB,QAAQ,GAAGmB,QAAQ,CAAChB,WAApB;YACAgB,QAAQ,GAAG,IAAX;UACH;QACJ;MACJ;;MAED9B,MAAM,CAACsB,aAAP,GAAuBA,aAAvB;IACH;EACJ;AAjGmB,CAAxB;AAoGA,IAAIS,YAAY,GAAG,CAAnB;AACA,IAAIC,wBAAwB,GAAG,EAA/B;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,YAAY,GAAG,CAAnB;;AAEA,SAASC,IAAT,GAAgB,CAAE;;AAElB,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;EAC/B,IAAIA,IAAJ,EAAU;IACN,OAAQA,IAAI,CAACrE,YAAL,IAAqBqE,IAAI,CAACrE,YAAL,CAAkB,IAAlB,CAAtB,IAAkDqE,IAAI,CAACC,EAA9D;EACH;AACF;;AAED,SAASC,eAAT,CAAyB3F,UAAzB,EAAqC;EAEjC,OAAO,SAAS4F,QAAT,CAAkB3F,QAAlB,EAA4BC,MAA5B,EAAoC2F,OAApC,EAA6C;IAChD,IAAI,CAACA,OAAL,EAAc;MACVA,OAAO,GAAG,EAAV;IACH;;IAED,IAAI,OAAO3F,MAAP,KAAkB,QAAtB,EAAgC;MAC5B,IAAID,QAAQ,CAACsD,QAAT,KAAsB,WAAtB,IAAqCtD,QAAQ,CAACsD,QAAT,KAAsB,MAA3D,IAAqEtD,QAAQ,CAACsD,QAAT,KAAsB,MAA/F,EAAuG;QACnG,IAAIuC,UAAU,GAAG5F,MAAjB;QACAA,MAAM,GAAG4B,GAAG,CAACI,aAAJ,CAAkB,MAAlB,CAAT;QACAhC,MAAM,CAACsC,SAAP,GAAmBsD,UAAnB;MACH,CAJD,MAIO;QACH5F,MAAM,GAAG+C,SAAS,CAAC/C,MAAD,CAAlB;MACH;IACJ;;IAED,IAAI6F,UAAU,GAAGF,OAAO,CAACE,UAAR,IAAsBP,iBAAvC;IACA,IAAIQ,iBAAiB,GAAGH,OAAO,CAACG,iBAAR,IAA6BT,IAArD;IACA,IAAIU,WAAW,GAAGJ,OAAO,CAACI,WAAR,IAAuBV,IAAzC;IACA,IAAIW,iBAAiB,GAAGL,OAAO,CAACK,iBAAR,IAA6BX,IAArD;IACA,IAAIY,WAAW,GAAGN,OAAO,CAACM,WAAR,IAAuBZ,IAAzC;IACA,IAAIa,qBAAqB,GAAGP,OAAO,CAACO,qBAAR,IAAiCb,IAA7D;IACA,IAAIc,eAAe,GAAGR,OAAO,CAACQ,eAAR,IAA2Bd,IAAjD;IACA,IAAIe,yBAAyB,GAAGT,OAAO,CAACS,yBAAR,IAAqCf,IAArE;IACA,IAAIgB,YAAY,GAAGV,OAAO,CAACU,YAAR,KAAyB,IAA5C,CAvBgD,CAyBhD;;IACA,IAAIC,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAtB;IACA,IAAIC,gBAAgB,GAAG,EAAvB;;IAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8B;MAC1BF,gBAAgB,CAACG,IAAjB,CAAsBD,GAAtB;IACH;;IAED,SAASE,uBAAT,CAAiCtB,IAAjC,EAAuCuB,cAAvC,EAAuD;MACnD,IAAIvB,IAAI,CAAC/E,QAAL,KAAkByE,YAAtB,EAAoC;QAChC,IAAIpB,QAAQ,GAAG0B,IAAI,CAACzB,UAApB;;QACA,OAAOD,QAAP,EAAiB;UAEb,IAAI8C,GAAG,GAAG7E,SAAV;;UAEA,IAAIgF,cAAc,KAAKH,GAAG,GAAGd,UAAU,CAAChC,QAAD,CAArB,CAAlB,EAAoD;YAChD;YACA;YACA6C,eAAe,CAACC,GAAD,CAAf;UACH,CAJD,MAIO;YACH;YACA;YACA;YACAR,eAAe,CAACtC,QAAD,CAAf;;YACA,IAAIA,QAAQ,CAACC,UAAb,EAAyB;cACrB+C,uBAAuB,CAAChD,QAAD,EAAWiD,cAAX,CAAvB;YACH;UACJ;;UAEDjD,QAAQ,GAAGA,QAAQ,CAACG,WAApB;QACH;MACJ;IACJ;IAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;IACQ,SAAS+C,UAAT,CAAoBxB,IAApB,EAA0BlB,UAA1B,EAAsCyC,cAAtC,EAAsD;MAClD,IAAIZ,qBAAqB,CAACX,IAAD,CAArB,KAAgC,KAApC,EAA2C;QACvC;MACH;;MAED,IAAIlB,UAAJ,EAAgB;QACZA,UAAU,CAAC2C,WAAX,CAAuBzB,IAAvB;MACH;;MAEDY,eAAe,CAACZ,IAAD,CAAf;MACAsB,uBAAuB,CAACtB,IAAD,EAAOuB,cAAP,CAAvB;IACH,CA9E+C,CAgFhD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IAEA,SAASG,SAAT,CAAmB1B,IAAnB,EAAyB;MACrB,IAAIA,IAAI,CAAC/E,QAAL,KAAkByE,YAAlB,IAAkCM,IAAI,CAAC/E,QAAL,KAAkB0E,wBAAxD,EAAkF;QAC9E,IAAIrB,QAAQ,GAAG0B,IAAI,CAACzB,UAApB;;QACA,OAAOD,QAAP,EAAiB;UACb,IAAI8C,GAAG,GAAGd,UAAU,CAAChC,QAAD,CAApB;;UACA,IAAI8C,GAAJ,EAAS;YACLL,eAAe,CAACK,GAAD,CAAf,GAAuB9C,QAAvB;UACH,CAJY,CAMb;;;UACAoD,SAAS,CAACpD,QAAD,CAAT;UAEAA,QAAQ,GAAGA,QAAQ,CAACG,WAApB;QACH;MACJ;IACJ;;IAEDiD,SAAS,CAAClH,QAAD,CAAT;;IAEA,SAASmH,eAAT,CAAyBC,EAAzB,EAA6B;MACzBpB,WAAW,CAACoB,EAAD,CAAX;MAEA,IAAItD,QAAQ,GAAGsD,EAAE,CAACrD,UAAlB;;MACA,OAAOD,QAAP,EAAiB;QACb,IAAIG,WAAW,GAAGH,QAAQ,CAACG,WAA3B;QAEA,IAAI2C,GAAG,GAAGd,UAAU,CAAChC,QAAD,CAApB;;QACA,IAAI8C,GAAJ,EAAS;UACL,IAAIS,eAAe,GAAGd,eAAe,CAACK,GAAD,CAArC,CADK,CAEL;UACA;;UACA,IAAIS,eAAe,IAAInE,gBAAgB,CAACY,QAAD,EAAWuD,eAAX,CAAvC,EAAoE;YAChEvD,QAAQ,CAACQ,UAAT,CAAoBgD,YAApB,CAAiCD,eAAjC,EAAkDvD,QAAlD;YACAyD,OAAO,CAACF,eAAD,EAAkBvD,QAAlB,CAAP;UACH,CAHD,MAGO;YACLqD,eAAe,CAACrD,QAAD,CAAf;UACD;QACJ,CAVD,MAUO;UACL;UACA;UACAqD,eAAe,CAACrD,QAAD,CAAf;QACD;;QAEDA,QAAQ,GAAGG,WAAX;MACH;IACJ;;IAED,SAASuD,aAAT,CAAuBrE,MAAvB,EAA+BsE,gBAA/B,EAAiDC,cAAjD,EAAiE;MAC7D;MACA;MACA;MACA,OAAOD,gBAAP,EAAyB;QACrB,IAAIE,eAAe,GAAGF,gBAAgB,CAACxD,WAAvC;;QACA,IAAKyD,cAAc,GAAG5B,UAAU,CAAC2B,gBAAD,CAAhC,EAAqD;UACjD;UACA;UACAd,eAAe,CAACe,cAAD,CAAf;QACH,CAJD,MAIO;UACH;UACA;UACAV,UAAU,CAACS,gBAAD,EAAmBtE,MAAnB,EAA2B;UAAK;UAAhC,CAAV;QACH;;QACDsE,gBAAgB,GAAGE,eAAnB;MACH;IACJ;;IAED,SAASJ,OAAT,CAAiBpE,MAAjB,EAAyBC,IAAzB,EAA+BkD,YAA/B,EAA6C;MACzC,IAAIsB,OAAO,GAAG9B,UAAU,CAAC1C,IAAD,CAAxB;;MAEA,IAAIwE,OAAJ,EAAa;QACT;QACA;QACA,OAAOrB,eAAe,CAACqB,OAAD,CAAtB;MACH;;MAED,IAAI,CAACtB,YAAL,EAAmB;QACf;QACA,IAAIL,iBAAiB,CAAC9C,MAAD,EAASC,IAAT,CAAjB,KAAoC,KAAxC,EAA+C;UAC3C;QACH,CAJc,CAMf;;;QACArD,UAAU,CAACoD,MAAD,EAASC,IAAT,CAAV,CAPe,CAQf;;QACA8C,WAAW,CAAC/C,MAAD,CAAX;;QAEA,IAAIkD,yBAAyB,CAAClD,MAAD,EAASC,IAAT,CAAzB,KAA4C,KAAhD,EAAuD;UACnD;QACH;MACJ;;MAED,IAAID,MAAM,CAACG,QAAP,KAAoB,UAAxB,EAAoC;QAClCuE,aAAa,CAAC1E,MAAD,EAASC,IAAT,CAAb;MACD,CAFD,MAEO;QACLgB,iBAAiB,CAACO,QAAlB,CAA2BxB,MAA3B,EAAmCC,IAAnC;MACD;IACJ;;IAED,SAASyE,aAAT,CAAuB1E,MAAvB,EAA+BC,IAA/B,EAAqC;MACjC,IAAI0E,cAAc,GAAG1E,IAAI,CAACW,UAA1B;MACA,IAAI0D,gBAAgB,GAAGtE,MAAM,CAACY,UAA9B;MACA,IAAIgE,YAAJ;MACA,IAAIL,cAAJ;MAEA,IAAIC,eAAJ;MACA,IAAIK,aAAJ;MACA,IAAIC,cAAJ,CARiC,CAUjC;;MACAC,KAAK,EAAE,OAAOJ,cAAP,EAAuB;QAC1BE,aAAa,GAAGF,cAAc,CAAC7D,WAA/B;QACA8D,YAAY,GAAGjC,UAAU,CAACgC,cAAD,CAAzB,CAF0B,CAI1B;;QACA,OAAOL,gBAAP,EAAyB;UACrBE,eAAe,GAAGF,gBAAgB,CAACxD,WAAnC;;UAEA,IAAI6D,cAAc,CAACK,UAAf,IAA6BL,cAAc,CAACK,UAAf,CAA0BV,gBAA1B,CAAjC,EAA8E;YAC1EK,cAAc,GAAGE,aAAjB;YACAP,gBAAgB,GAAGE,eAAnB;YACA,SAASO,KAAT;UACH;;UAEDR,cAAc,GAAG5B,UAAU,CAAC2B,gBAAD,CAA3B;UAEA,IAAIW,eAAe,GAAGX,gBAAgB,CAAChH,QAAvC,CAXqB,CAarB;;UACA,IAAI4H,YAAY,GAAGtG,SAAnB;;UAEA,IAAIqG,eAAe,KAAKN,cAAc,CAACrH,QAAvC,EAAiD;YAC7C,IAAI2H,eAAe,KAAKlD,YAAxB,EAAsC;cAClC;cAEA,IAAI6C,YAAJ,EAAkB;gBACd;gBACA;gBACA,IAAIA,YAAY,KAAKL,cAArB,EAAqC;kBACjC;kBACA;kBACA;kBACA,IAAKO,cAAc,GAAG1B,eAAe,CAACwB,YAAD,CAArC,EAAsD;oBAClD,IAAIJ,eAAe,KAAKM,cAAxB,EAAwC;sBACpC;sBACA;sBACA;sBACA;sBACA;sBACAI,YAAY,GAAG,KAAf;oBACH,CAPD,MAOO;sBACH;sBACA;sBACA;sBAEA;sBACA;sBACA;sBACAlF,MAAM,CAACmF,YAAP,CAAoBL,cAApB,EAAoCR,gBAApC,EARG,CAUH;;sBAEA,IAAIC,cAAJ,EAAoB;wBAChB;wBACA;wBACAf,eAAe,CAACe,cAAD,CAAf;sBACH,CAJD,MAIO;wBACH;wBACA;wBACAV,UAAU,CAACS,gBAAD,EAAmBtE,MAAnB,EAA2B;wBAAK;wBAAhC,CAAV;sBACH;;sBAEDsE,gBAAgB,GAAGQ,cAAnB;oBACH;kBACJ,CAhCD,MAgCO;oBACH;oBACA;oBACAI,YAAY,GAAG,KAAf;kBACH;gBACJ;cACJ,CA7CD,MA6CO,IAAIX,cAAJ,EAAoB;gBACvB;gBACAW,YAAY,GAAG,KAAf;cACH;;cAEDA,YAAY,GAAGA,YAAY,KAAK,KAAjB,IAA0BnF,gBAAgB,CAACuE,gBAAD,EAAmBK,cAAnB,CAAzD;;cACA,IAAIO,YAAJ,EAAkB;gBACd;gBACA;gBACA;gBACA;gBACAd,OAAO,CAACE,gBAAD,EAAmBK,cAAnB,CAAP;cACH;YAEJ,CA9DD,MA8DO,IAAIM,eAAe,KAAKhD,SAApB,IAAiCgD,eAAe,IAAI/C,YAAxD,EAAsE;cACzE;cACAgD,YAAY,GAAG,IAAf,CAFyE,CAGzE;cACA;;cACA,IAAIZ,gBAAgB,CAAC3C,SAAjB,KAA+BgD,cAAc,CAAChD,SAAlD,EAA6D;gBACzD2C,gBAAgB,CAAC3C,SAAjB,GAA6BgD,cAAc,CAAChD,SAA5C;cACH;YAEJ;UACJ;;UAED,IAAIuD,YAAJ,EAAkB;YACd;YACA;YACAP,cAAc,GAAGE,aAAjB;YACAP,gBAAgB,GAAGE,eAAnB;YACA,SAASO,KAAT;UACH,CAjGoB,CAmGrB;UACA;UACA;UACA;UACA;UACA;;;UACA,IAAIR,cAAJ,EAAoB;YAChB;YACA;YACAf,eAAe,CAACe,cAAD,CAAf;UACH,CAJD,MAIO;YACH;YACA;YACAV,UAAU,CAACS,gBAAD,EAAmBtE,MAAnB,EAA2B;YAAK;YAAhC,CAAV;UACH;;UAEDsE,gBAAgB,GAAGE,eAAnB;QACH,CAzHyB,CAyHxB;QAEF;QACA;QACA;QACA;;;QACA,IAAII,YAAY,KAAKE,cAAc,GAAG1B,eAAe,CAACwB,YAAD,CAArC,CAAZ,IAAoE7E,gBAAgB,CAAC+E,cAAD,EAAiBH,cAAjB,CAAxF,EAA0H;UACtH3E,MAAM,CAACe,WAAP,CAAmB+D,cAAnB,EADsH,CAEtH;;UACAV,OAAO,CAACU,cAAD,EAAiBH,cAAjB,CAAP;QACH,CAJD,MAIO;UACH,IAAIS,uBAAuB,GAAGxC,iBAAiB,CAAC+B,cAAD,CAA/C;;UACA,IAAIS,uBAAuB,KAAK,KAAhC,EAAuC;YACnC,IAAIA,uBAAJ,EAA6B;cACzBT,cAAc,GAAGS,uBAAjB;YACH;;YAED,IAAIT,cAAc,CAACU,SAAnB,EAA8B;cAC1BV,cAAc,GAAGA,cAAc,CAACU,SAAf,CAAyBrF,MAAM,CAACsF,aAAP,IAAwB5G,GAAjD,CAAjB;YACH;;YACDsB,MAAM,CAACe,WAAP,CAAmB4D,cAAnB;YACAX,eAAe,CAACW,cAAD,CAAf;UACH;QACJ;;QAEDA,cAAc,GAAGE,aAAjB;QACAP,gBAAgB,GAAGE,eAAnB;MACH;;MAEDH,aAAa,CAACrE,MAAD,EAASsE,gBAAT,EAA2BC,cAA3B,CAAb;MAEA,IAAIgB,gBAAgB,GAAGtE,iBAAiB,CAACjB,MAAM,CAACG,QAAR,CAAxC;;MACA,IAAIoF,gBAAJ,EAAsB;QAClBA,gBAAgB,CAACvF,MAAD,EAASC,IAAT,CAAhB;MACH;IACJ,CArX+C,CAqX9C;;;IAEF,IAAIuF,WAAW,GAAG3I,QAAlB;IACA,IAAI4I,eAAe,GAAGD,WAAW,CAAClI,QAAlC;IACA,IAAIoI,UAAU,GAAG5I,MAAM,CAACQ,QAAxB;;IAEA,IAAI,CAAC6F,YAAL,EAAmB;MACf;MACA;MACA,IAAIsC,eAAe,KAAK1D,YAAxB,EAAsC;QAClC,IAAI2D,UAAU,KAAK3D,YAAnB,EAAiC;UAC7B,IAAI,CAAChC,gBAAgB,CAAClD,QAAD,EAAWC,MAAX,CAArB,EAAyC;YACrCmG,eAAe,CAACpG,QAAD,CAAf;YACA2I,WAAW,GAAG9E,YAAY,CAAC7D,QAAD,EAAW4D,eAAe,CAAC3D,MAAM,CAACqD,QAAR,EAAkBrD,MAAM,CAACY,YAAzB,CAA1B,CAA1B;UACH;QACJ,CALD,MAKO;UACH;UACA8H,WAAW,GAAG1I,MAAd;QACH;MACJ,CAVD,MAUO,IAAI2I,eAAe,KAAKxD,SAApB,IAAiCwD,eAAe,KAAKvD,YAAzD,EAAuE;QAAE;QAC5E,IAAIwD,UAAU,KAAKD,eAAnB,EAAoC;UAChC,IAAID,WAAW,CAAC7D,SAAZ,KAA0B7E,MAAM,CAAC6E,SAArC,EAAgD;YAC5C6D,WAAW,CAAC7D,SAAZ,GAAwB7E,MAAM,CAAC6E,SAA/B;UACH;;UAED,OAAO6D,WAAP;QACH,CAND,MAMO;UACH;UACAA,WAAW,GAAG1I,MAAd;QACH;MACJ;IACJ;;IAED,IAAI0I,WAAW,KAAK1I,MAApB,EAA4B;MACxB;MACA;MACAmG,eAAe,CAACpG,QAAD,CAAf;IACH,CAJD,MAIO;MACH,IAAIC,MAAM,CAACkI,UAAP,IAAqBlI,MAAM,CAACkI,UAAP,CAAkBQ,WAAlB,CAAzB,EAAyD;QACrD;MACH;;MAEDpB,OAAO,CAACoB,WAAD,EAAc1I,MAAd,EAAsBqG,YAAtB,CAAP,CALG,CAOH;MACA;MACA;MACA;MACA;;MACA,IAAII,gBAAJ,EAAsB;QAClB,KAAK,IAAIhG,CAAC,GAAC,CAAN,EAASoI,GAAG,GAACpC,gBAAgB,CAAC/F,MAAnC,EAA2CD,CAAC,GAACoI,GAA7C,EAAkDpI,CAAC,EAAnD,EAAuD;UACnD,IAAIqI,UAAU,GAAGxC,eAAe,CAACG,gBAAgB,CAAChG,CAAD,CAAjB,CAAhC;;UACA,IAAIqI,UAAJ,EAAgB;YACZ/B,UAAU,CAAC+B,UAAD,EAAaA,UAAU,CAACzE,UAAxB,EAAoC,KAApC,CAAV;UACH;QACJ;MACJ;IACJ;;IAED,IAAI,CAACgC,YAAD,IAAiBqC,WAAW,KAAK3I,QAAjC,IAA6CA,QAAQ,CAACsE,UAA1D,EAAsE;MAClE,IAAIqE,WAAW,CAACH,SAAhB,EAA2B;QACvBG,WAAW,GAAGA,WAAW,CAACH,SAAZ,CAAsBxI,QAAQ,CAACyI,aAAT,IAA0B5G,GAAhD,CAAd;MACH,CAHiE,CAIlE;MACA;MACA;MACA;MACA;;;MACA7B,QAAQ,CAACsE,UAAT,CAAoBgD,YAApB,CAAiCqB,WAAjC,EAA8C3I,QAA9C;IACH;;IAED,OAAO2I,WAAP;EACH,CA7bD;AA8bH;;AAED,IAAIhD,QAAQ,GAAGD,eAAe,CAAC3F,UAAD,CAA9B;AAEAiJ,MAAM,CAACC,OAAP,GAAiBtD,QAAjB"}]}