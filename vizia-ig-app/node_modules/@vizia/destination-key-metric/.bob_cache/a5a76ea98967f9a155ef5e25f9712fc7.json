{"remainingRequest":"/Users/pantu/.npm/_npx/64608/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/pantu/work2/vizia-ig-app/node_modules/@vizia/format/src/lib/get-format-parts.js","dependencies":[{"path":"/Users/pantu/work2/vizia-ig-app/node_modules/@vizia/format/src/lib/get-format-parts.js","mtime":1664781785127},{"path":"/Users/pantu/.npm/_npx/64608/lib/node_modules/@vizia/app-emulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pantu/.npm/_npx/64608/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKY29uc3QgZ2V0SW50bE51bWJlckZvcm1hdE9wdGlvbnMgPSByZXF1aXJlKCcuL2dldC1pbnRsLW9wdGlvbnMnKTsKY29uc3Qgcm91bmQgPSByZXF1aXJlKCcuL3JvdW5kJyk7CmNvbnN0IGxvY2FsZURhdGEgPSByZXF1aXJlKCcuLi9sb2NhbGUnKTsKY29uc3QgZ2V0Um91bmRlZFZhbHVlID0gKHZhbHVlLCBfcmVmKSA9PiB7CiAgbGV0IHsKICAgIG1hbnRpc3NhLAogICAgZm9ybWF0CiAgfSA9IF9yZWY7CiAgcmV0dXJuIGZvcm1hdCA9PT0gJ3BlcmNlbnQnID8gcm91bmQodmFsdWUsIG1hbnRpc3NhICsgMikgOiByb3VuZCh2YWx1ZSwgbWFudGlzc2EpOwp9Owpjb25zdCBmbGF0dGVuID0gKG1lbW8sIGl0ZW0pID0+IFsuLi5tZW1vLCAuLi4oQXJyYXkuaXNBcnJheShpdGVtKSA/IGl0ZW0gOiBbaXRlbV0pXTsKCi8qKgogKiBHZXQgb3JkaW5hbCBwYXJ0LgogKiBJbnRsIGRvZXMgbm90IHByb3ZpZGUgb3JkaW5hbCBzdWZmaXhlcywgc28gd2UgaGF2ZSB0byBhZGQgdGhlbS4KICovCmNvbnN0IGdldE9yZGluYWxQYXJ0ID0gKHZhbHVlLCBsb2NhbGUpID0+IHsKICBjb25zdCBiYXNlTG9jYWxlID0gbG9jYWxlLnNwbGl0KCctJylbMF07CiAgY29uc3Qgb3JkaW5hbFZhbHVlID0gKGxvY2FsZURhdGEub3JkaW5hbFtiYXNlTG9jYWxlXSB8fCBsb2NhbGVEYXRhLm9yZGluYWwub3RoZXIpKHZhbHVlKTsKICByZXR1cm4gewogICAgdHlwZTogJ29yZGluYWwnLAogICAgdmFsdWU6IG9yZGluYWxWYWx1ZQogIH07Cn07CgovKioKICogQnVpbGRzIGFuIGFycmF5IG9mIGZvcm1hdHRlZCBwYXJ0cyBiYXNlZCBvbiBmb3JtYXQuCiAqLwpjb25zdCBnZXRPdGhlckZvcm1hdFBhcnRzID0gKHZhbHVlLCBwcm9wcykgPT4gewogIGNvbnN0IHsKICAgIGZvcm1hdCwKICAgIGxvY2FsZQogIH0gPSBwcm9wczsKICBjb25zdCByb3VuZGVkVmFsdWUgPSBnZXRSb3VuZGVkVmFsdWUodmFsdWUsIHByb3BzKTsKICBjb25zdCBpbnRsTnVtYmVyRm9ybWF0T3B0aW9ucyA9IGdldEludGxOdW1iZXJGb3JtYXRPcHRpb25zKHJvdW5kZWRWYWx1ZSwgcHJvcHMpOwogIGNvbnN0IGludGxOdW1iZXJGb3JtYXQgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQobG9jYWxlLCBpbnRsTnVtYmVyRm9ybWF0T3B0aW9ucyk7CiAgY29uc3QgZm9ybWF0UGFydHMgPSBpbnRsTnVtYmVyRm9ybWF0LmZvcm1hdFRvUGFydHMocm91bmRlZFZhbHVlKTsKICBjb25zdCBvcmRpbmFsUGFydCA9IGZvcm1hdCA9PT0gJ29yZGluYWwnID8gZ2V0T3JkaW5hbFBhcnQocm91bmRlZFZhbHVlLCBsb2NhbGUpIDogbnVsbDsKICByZXR1cm4gZm9ybWF0UGFydHMKICAvLyBTcGxpdCBpbnRlZ2VyL2ZyYWN0aW9uIGludG8gc2VwYXJhdGUgc2luZ2xlLWRpZ2l0IHBhcnRzOwogIC5tYXAocGFydCA9PiB7CiAgICBjb25zdCB7CiAgICAgIHR5cGUsCiAgICAgIHZhbHVlCiAgICB9ID0gcGFydDsKICAgIGlmIChbJ2ludGVnZXInLCAnZnJhY3Rpb24nXS5pbmNsdWRlcyh0eXBlKSkgewogICAgICByZXR1cm4gdmFsdWUuc3BsaXQoJycpLm1hcCh2YWx1ZSA9PiAoewogICAgICAgIHR5cGUsCiAgICAgICAgdmFsdWUKICAgICAgfSkpOwogICAgfQogICAgcmV0dXJuIHBhcnQ7CiAgfSkKICAvLyBBZGQgYWRkaXRpb25hbCBvcmRpbmFsIHBhcnQKICAuY29uY2F0KG9yZGluYWxQYXJ0IHx8IFtdKQogIC8vIEZsYXR0ZW4gdG8gc2luZ2xlIGFycmF5CiAgLnJlZHVjZShmbGF0dGVuLCBbXSk7Cn07CgovKioKICogQnJlYWtzIGRvd24gZHVyYXRpb24gaW50byBodW1hbml6ZWQgZ3JhbnVsYXIgdW5pdHMuCiAqLwpjb25zdCBnZXREdXJhdGlvbkZvcm1hdFBhcnRzID0gKHZhbHVlLCBwcm9wcykgPT4gewogIC8vIEtlZXAgY2FzdWFsIGNvbnZlcnNpb25zLCBhcyB0aGlzIGlzIG9ubHkgZm9yIGh1bWFuaXppbmcKICBjb25zdCB1bml0cyA9IFtbJ3llYXInLCAzNjUgKiAyNCAqIDYwICogNjAgKiAxMDAwXSwgWydtb250aCcsIDMwICogMjQgKiA2MCAqIDYwICogMTAwMF0sIFsnd2VlaycsIDcgKiAyNCAqIDYwICogNjAgKiAxMDAwXSwgWydkYXknLCAyNCAqIDYwICogNjAgKiAxMDAwXSwgWydob3VyJywgNjAgKiA2MCAqIDEwMDBdLCBbJ21pbnV0ZScsIDYwICogMTAwMF0sIFsnc2Vjb25kJywgMTAwMF0sIFsnbWlsbGlzZWNvbmQnLCAxXV07CiAgY29uc3QgewogICAgcmVsZXZhbnRVbml0cwogIH0gPSB1bml0cy5yZWR1Y2UoKF9yZWYyLCBfcmVmMykgPT4gewogICAgbGV0IHsKICAgICAgcmVtYWluaW5nVmFsdWUsCiAgICAgIHJlbGV2YW50VW5pdHMKICAgIH0gPSBfcmVmMjsKICAgIGxldCBbdW5pdE5hbWUsIHVuaXRWYWx1ZV0gPSBfcmVmMzsKICAgIGNvbnN0IHRvdGFsVW5pdHMgPSBNYXRoLnJvdW5kKHJlbWFpbmluZ1ZhbHVlIC8gdW5pdFZhbHVlLCAwKTsKICAgIGlmICh0b3RhbFVuaXRzIDwgMSkgewogICAgICByZXR1cm4gewogICAgICAgIHJlbWFpbmluZ1ZhbHVlLAogICAgICAgIHJlbGV2YW50VW5pdHMKICAgICAgfTsKICAgIH0KICAgIHJldHVybiB7CiAgICAgIHJlbWFpbmluZ1ZhbHVlOiByZW1haW5pbmdWYWx1ZSAtIHVuaXRWYWx1ZSAqIHRvdGFsVW5pdHMsCiAgICAgIHJlbGV2YW50VW5pdHM6IFsuLi5yZWxldmFudFVuaXRzLCBbdW5pdE5hbWUsIHVuaXRWYWx1ZSwgdG90YWxVbml0c11dCiAgICB9OwogIH0sIHsKICAgIHJlbWFpbmluZ1ZhbHVlOiB2YWx1ZSwKICAgIHJlbGV2YW50VW5pdHM6IFtdCiAgfSk7CiAgcmV0dXJuIChyZWxldmFudFVuaXRzLmxlbmd0aCA/IHJlbGV2YW50VW5pdHMgOiBbWy4uLnVuaXRzW3VuaXRzLmxlbmd0aCAtIDFdLCAwXV0KICAvLyBPbmx5IHRha2UgdGhlIGxhcmdlc3QgMiB1bml0cwogICkuc2xpY2UoMCwgMikKICAvLyBHZXQgZm9ybWF0IHBhcnRzIHBlciB1bml0CiAgLm1hcChfcmVmNCA9PiB7CiAgICBsZXQgW3VuaXROYW1lLCwgdG90YWxVbml0c10gPSBfcmVmNDsKICAgIHJldHVybiBnZXRPdGhlckZvcm1hdFBhcnRzKHRvdGFsVW5pdHMsIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7CiAgICAgIGZvcm1hdDogdW5pdE5hbWUKICAgIH0pKTsKICB9KQogIC8vIEFkZCBhIHNwYWNlIGNoYXJhY3RlciBiZXR3ZWVuIHVuaXRzCiAgLm1hcCgodW5pdFBhcnRzLCBpLCBjb2xsZWN0aW9uKSA9PiB7CiAgICBpZiAoaSA8IGNvbGxlY3Rpb24ubGVuZ3RoIC0gMSkgewogICAgICByZXR1cm4gWy4uLnVuaXRQYXJ0cywgewogICAgICAgIHR5cGU6ICdsaXRlcmFsJywKICAgICAgICB2YWx1ZTogJyAnCiAgICAgIH1dOwogICAgfQogICAgcmV0dXJuIHVuaXRQYXJ0czsKICB9KQogIC8vIEZsYXR0ZW4gdG8gc2luZ2xlIGFycmF5CiAgLnJlZHVjZShmbGF0dGVuLCBbXSk7Cn07CgovKioKICogQnVpbGRzIGFuIGFycmF5IG9mIGZvcm1hdHRlZCBwYXJ0cyBiYXNlZCBvbiBpbnB1dC4KICogV2UgZXh0ZW5kIHRoZSByZXN1bHQgb2YgSW50bCdzIGZvcm1hdFRvUGFydHMgd2l0aCBvdXIgb3duIHBhcnRzIHRvIGdldCBtb3JlIGZpbmUgY29udHJvbCBvdmVyIGZvcm1hdHRpbmcuCiAqIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9OdW1iZXJGb3JtYXQvZm9ybWF0VG9QYXJ0cwogKi8KY29uc3QgZ2V0Rm9ybWF0UGFydHMgPSAodmFsdWUsIHByb3BzKSA9PiB7CiAgY29uc3QgewogICAgZm9ybWF0CiAgfSA9IHByb3BzOwogIGlmIChmb3JtYXQgPT09ICdkdXJhdGlvbicpIHsKICAgIHJldHVybiBnZXREdXJhdGlvbkZvcm1hdFBhcnRzKHZhbHVlLCBwcm9wcyk7CiAgfQogIHJldHVybiBnZXRPdGhlckZvcm1hdFBhcnRzKHZhbHVlLCBwcm9wcyk7Cn07Cm1vZHVsZS5leHBvcnRzID0gZ2V0Rm9ybWF0UGFydHM7"},{"version":3,"names":["getIntlNumberFormatOptions","require","round","localeData","getRoundedValue","value","mantissa","format","flatten","memo","item","Array","isArray","getOrdinalPart","locale","baseLocale","split","ordinalValue","ordinal","other","type","getOtherFormatParts","props","roundedValue","intlNumberFormatOptions","intlNumberFormat","Intl","NumberFormat","formatParts","formatToParts","ordinalPart","map","part","includes","concat","reduce","getDurationFormatParts","units","relevantUnits","remainingValue","unitName","unitValue","totalUnits","Math","length","slice","Object","assign","unitParts","i","collection","getFormatParts","module","exports"],"sources":["/Users/pantu/work2/vizia-ig-app/node_modules/@vizia/format/src/lib/get-format-parts.js"],"sourcesContent":["'use strict';\n\nconst getIntlNumberFormatOptions = require('./get-intl-options');\nconst round = require('./round');\nconst localeData = require('../locale');\n\nconst getRoundedValue = (value, {mantissa, format}) => {\n    return format === 'percent' ? round(value, mantissa + 2) : round(value, mantissa);\n};\n\nconst flatten = (memo, item) => [\n    ...memo,\n    ...(Array.isArray(item) ? item : [item])\n];\n\n/**\n * Get ordinal part.\n * Intl does not provide ordinal suffixes, so we have to add them.\n */\nconst getOrdinalPart = (value, locale) => {\n    const baseLocale = locale.split('-')[0];\n    const ordinalValue = (localeData.ordinal[baseLocale] || localeData.ordinal.other)(value);\n\n    return {type: 'ordinal', value: ordinalValue};\n};\n\n/**\n * Builds an array of formatted parts based on format.\n */\nconst getOtherFormatParts = (value, props) => {\n    const {format, locale} = props;\n    const roundedValue = getRoundedValue(value, props);\n    const intlNumberFormatOptions = getIntlNumberFormatOptions(roundedValue, props);\n    const intlNumberFormat = new Intl.NumberFormat(locale, intlNumberFormatOptions);\n    const formatParts = intlNumberFormat.formatToParts(roundedValue);\n    const ordinalPart = (\n        format === 'ordinal'\n    ) ? getOrdinalPart(roundedValue, locale) : null;\n\n    return formatParts\n        // Split integer/fraction into separate single-digit parts;\n        .map((part) => {\n            const {type, value} = part;\n            if (['integer', 'fraction'].includes(type)) {\n                return value\n                    .split('')\n                    .map((value) => ({type, value}));\n            }\n            return part;\n        })\n        // Add additional ordinal part\n        .concat(ordinalPart || [])\n        // Flatten to single array\n        .reduce(flatten, []);\n};\n\n/**\n * Breaks down duration into humanized granular units.\n */\nconst getDurationFormatParts = (value, props) => {\n    // Keep casual conversions, as this is only for humanizing\n    const units = [\n        ['year', 365 * 24 * 60 * 60 * 1000],\n        ['month', 30 * 24 * 60 * 60 * 1000],\n        ['week', 7 * 24 * 60 * 60 * 1000],\n        ['day', 24 * 60 * 60 * 1000],\n        ['hour', 60 * 60 * 1000],\n        ['minute', 60 * 1000],\n        ['second', 1000],\n        ['millisecond', 1]\n    ];\n\n    const {relevantUnits} = units\n        .reduce(({remainingValue, relevantUnits}, [unitName, unitValue]) => {\n            const totalUnits = Math.round(remainingValue / unitValue, 0);\n\n            if (totalUnits < 1) {\n                return {remainingValue, relevantUnits};\n            }\n            return {\n                remainingValue: remainingValue - (unitValue * totalUnits),\n                relevantUnits: [...relevantUnits, [unitName, unitValue, totalUnits]]\n            };\n        }, {\n            remainingValue: value,\n            relevantUnits: []\n        });\n\n    return (relevantUnits.length ? relevantUnits : [[...units[units.length - 1], 0]])\n        // Only take the largest 2 units\n        .slice(0, 2)\n        // Get format parts per unit\n        .map(([unitName, , totalUnits]) => {\n            return getOtherFormatParts(totalUnits, Object.assign({}, props, {\n                format: unitName\n            }));\n        })\n        // Add a space character between units\n        .map((unitParts, i, collection) => {\n            if (i < collection.length - 1) {\n                return [\n                    ...unitParts,\n                    {type: 'literal', value: ' '}\n                ];\n            }\n            return unitParts;\n        })\n        // Flatten to single array\n        .reduce(flatten, []);\n};\n\n/**\n * Builds an array of formatted parts based on input.\n * We extend the result of Intl's formatToParts with our own parts to get more fine control over formatting.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat/formatToParts\n */\nconst getFormatParts = (value, props) => {\n    const {format} = props;\n\n    if (format === 'duration') {\n        return getDurationFormatParts(value, props);\n    }\n    return getOtherFormatParts(value, props);\n};\n\nmodule.exports = getFormatParts;\n"],"mappings":"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"}]}