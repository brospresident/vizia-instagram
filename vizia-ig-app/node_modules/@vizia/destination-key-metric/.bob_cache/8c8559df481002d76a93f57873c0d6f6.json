{"remainingRequest":"/Users/pantu/.npm/_npx/5593/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/pantu/work2/vizia/node_modules/@vizia/format/src/lib/parse-value.js","dependencies":[{"path":"/Users/pantu/work2/vizia/node_modules/@vizia/format/src/lib/parse-value.js","mtime":1664781785127},{"path":"/Users/pantu/.npm/_npx/5593/lib/node_modules/@vizia/app-emulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pantu/.npm/_npx/5593/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwovKioKICogUGFyc2VzIG51bWJlciBhY2NvcmRpbmcgdG8gdGhlIHByb3ZpZGVkIGxvY2FsZSwgc28gdGhhdCBkZWxpbWl0ZXJzIGV0YyBhcmUgaW50ZXJwcmV0ZWQgcHJvcGVybHkKICovCgpjb25zdCBjcmVhdGVQYXJzZU51bWJlciA9IGxvY2FsZSA9PiB7CiAgY29uc3QgcGFydHMgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQobG9jYWxlKS5mb3JtYXRUb1BhcnRzKDEyMzQ1LjYpOwogIGNvbnN0IG51bWVyYWxzID0gWy4uLm5ldyBJbnRsLk51bWJlckZvcm1hdChsb2NhbGUsIHsKICAgIHVzZUdyb3VwaW5nOiBmYWxzZQogIH0pLmZvcm1hdCg5ODc2NTQzMjEwKV0ucmV2ZXJzZSgpOwogIGNvbnN0IG51bWVyYWxJbmRleE1hcCA9IG5ldyBNYXAobnVtZXJhbHMubWFwKChudW1lcmFsLCBpKSA9PiBbbnVtZXJhbCwgaV0pKTsKICBjb25zdCBncm91cFRlc3QgPSBuZXcgUmVnRXhwKGBbJHtwYXJ0cy5maW5kKGQgPT4gZC50eXBlID09PSAnZ3JvdXAnKS52YWx1ZX1dYCwgJ2cnKTsKICBjb25zdCBkZWNpbWFsVGVzdCA9IG5ldyBSZWdFeHAoYFske3BhcnRzLmZpbmQoZCA9PiBkLnR5cGUgPT09ICdkZWNpbWFsJykudmFsdWV9XWApOwogIGNvbnN0IG51bWVyYWxUZXN0ID0gbmV3IFJlZ0V4cChgWyR7bnVtZXJhbHMuam9pbignJyl9XWAsICdnJyk7CiAgY29uc3Qgb3RoZXJUZXN0ID0gbmV3IFJlZ0V4cCgnW14wLTktLl0nLCAnZycpOwogIHJldHVybiB2YWx1ZSA9PiB7CiAgICAvLyBTYW5pdGlzZXMgdG8gc3RyaW5nIHBhcnNlYWJsZSBhcyBKYXZhU2NyaXB0IGZsb2F0CiAgICBjb25zdCBzYW5pdGl6ZWQgPSB2YWx1ZS50cmltKCkgLy8gU3RyaXAgZ3JvdXAgc2VwZXJhdG9yIChkZWxpbWl0ZXIpCiAgICAucmVwbGFjZShncm91cFRlc3QsICcnKSAvLyBSZXBsYWNlIGxvY2FsZSBkZWNpbWFsIHdpdGggc3RhbmRhcmQgZGVjaW1hbAogICAgLnJlcGxhY2UoZGVjaW1hbFRlc3QsICcuJykgLy8gUmVwbGFjZSBsb2NhbGUgbnVtZXJhbHMgd2l0aCBzdGFuZGFyZCBudW1lcmFscwogICAgLnJlcGxhY2UobnVtZXJhbFRlc3QsIG51bWVyYWwgPT4gbnVtZXJhbEluZGV4TWFwLmdldChudW1lcmFsKSkgLy8gRmluYWxseSwgc3RyaXAgb3V0IGFsbCBvdGhlciBjaGFyYWN0ZXJzCiAgICAucmVwbGFjZShvdGhlclRlc3QsICcnKTsKICAgIHJldHVybiBwYXJzZUZsb2F0KHNhbml0aXplZCkgfHwgTmFOOwogIH07Cn07Ci8qKgogKiBQYXJzZXMgdmFsdWUgdG8gbnVtZXJpYwogKiBJZiBpdCdzIGEgc3RyaW5nLCBpdCB3aWxsIGF0dGVtcHQgdG8gZXh0cmFjdCB0aGUgbnVtZXJpYyB2YWx1ZQogKiBPdGhlcndpc2UsIGl0J3MgTmFOCiAqLwoKCmNvbnN0IHBhcnNlVmFsdWUgPSBmdW5jdGlvbiAodmFsdWUpIHsKICBsZXQgewogICAgbG9jYWxlID0gJ2VuJwogIH0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwoKICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykgewogICAgY29uc3QgcGFyc2VOdW1iZXIgPSBjcmVhdGVQYXJzZU51bWJlcihsb2NhbGUpOwogICAgcmV0dXJuIHBhcnNlTnVtYmVyKHZhbHVlKTsKICB9IGVsc2UgaWYgKE51bWJlci5pc0Zpbml0ZSh2YWx1ZSkpIHsKICAgIHJldHVybiB2YWx1ZTsKICB9CgogIHJldHVybiBOYU47Cn07Cgptb2R1bGUuZXhwb3J0cyA9IHBhcnNlVmFsdWU7"},{"version":3,"names":["createParseNumber","locale","parts","Intl","NumberFormat","formatToParts","numerals","useGrouping","format","reverse","numeralIndexMap","Map","map","numeral","i","groupTest","RegExp","find","d","type","value","decimalTest","numeralTest","join","otherTest","sanitized","trim","replace","get","parseFloat","NaN","parseValue","parseNumber","Number","isFinite","module","exports"],"sources":["/Users/pantu/work2/vizia/node_modules/@vizia/format/src/lib/parse-value.js"],"sourcesContent":["'use strict';\n\n/**\n * Parses number according to the provided locale, so that delimiters etc are interpreted properly\n */\nconst createParseNumber = (locale) => {\n    const parts = new Intl.NumberFormat(locale).formatToParts(12345.6);\n    const numerals = [\n        ...new Intl.NumberFormat(locale, {useGrouping: false}).format(9876543210)\n    ].reverse();\n    const numeralIndexMap = new Map(numerals.map((numeral, i) => [numeral, i]));\n\n    const groupTest = new RegExp(`[${parts.find(d => d.type === 'group').value}]`, 'g');\n    const decimalTest = new RegExp(`[${parts.find(d => d.type === 'decimal').value}]`);\n    const numeralTest = new RegExp(`[${numerals.join('')}]`, 'g');\n    const otherTest = new RegExp('[^0-9-.]', 'g');\n\n    return (value) => {\n        // Sanitises to string parseable as JavaScript float\n        const sanitized = value\n            .trim()\n            // Strip group seperator (delimiter)\n            .replace(groupTest, '')\n            // Replace locale decimal with standard decimal\n            .replace(decimalTest, '.')\n            // Replace locale numerals with standard numerals\n            .replace(numeralTest, (numeral) => numeralIndexMap.get(numeral))\n            // Finally, strip out all other characters\n            .replace(otherTest, '');\n\n        return parseFloat(sanitized) || NaN;\n    };\n};\n\n/**\n * Parses value to numeric\n * If it's a string, it will attempt to extract the numeric value\n * Otherwise, it's NaN\n */\nconst parseValue = (value, {locale = 'en'} = {}) => {\n    if (typeof value === 'string') {\n        const parseNumber = createParseNumber(locale);\n        return parseNumber(value);\n    } else if (Number.isFinite(value)) {\n        return value;\n    }\n    return NaN;\n};\n\nmodule.exports = parseValue;\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AACA,MAAMA,iBAAiB,GAAIC,MAAD,IAAY;EAClC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsBH,MAAtB,EAA8BI,aAA9B,CAA4C,OAA5C,CAAd;EACA,MAAMC,QAAQ,GAAG,CACb,GAAG,IAAIH,IAAI,CAACC,YAAT,CAAsBH,MAAtB,EAA8B;IAACM,WAAW,EAAE;EAAd,CAA9B,EAAoDC,MAApD,CAA2D,UAA3D,CADU,EAEfC,OAFe,EAAjB;EAGA,MAAMC,eAAe,GAAG,IAAIC,GAAJ,CAAQL,QAAQ,CAACM,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB,CAACD,OAAD,EAAUC,CAAV,CAA7B,CAAR,CAAxB;EAEA,MAAMC,SAAS,GAAG,IAAIC,MAAJ,CAAY,IAAGd,KAAK,CAACe,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,OAA3B,EAAoCC,KAAM,GAAzD,EAA6D,GAA7D,CAAlB;EACA,MAAMC,WAAW,GAAG,IAAIL,MAAJ,CAAY,IAAGd,KAAK,CAACe,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAA3B,EAAsCC,KAAM,GAA3D,CAApB;EACA,MAAME,WAAW,GAAG,IAAIN,MAAJ,CAAY,IAAGV,QAAQ,CAACiB,IAAT,CAAc,EAAd,CAAkB,GAAjC,EAAqC,GAArC,CAApB;EACA,MAAMC,SAAS,GAAG,IAAIR,MAAJ,CAAW,UAAX,EAAuB,GAAvB,CAAlB;EAEA,OAAQI,KAAD,IAAW;IACd;IACA,MAAMK,SAAS,GAAGL,KAAK,CAClBM,IADa,GAEd;IAFc,CAGbC,OAHa,CAGLZ,SAHK,EAGM,EAHN,EAId;IAJc,CAKbY,OALa,CAKLN,WALK,EAKQ,GALR,EAMd;IANc,CAObM,OAPa,CAOLL,WAPK,EAOST,OAAD,IAAaH,eAAe,CAACkB,GAAhB,CAAoBf,OAApB,CAPrB,EAQd;IARc,CASbc,OATa,CASLH,SATK,EASM,EATN,CAAlB;IAWA,OAAOK,UAAU,CAACJ,SAAD,CAAV,IAAyBK,GAAhC;EACH,CAdD;AAeH,CA3BD;AA6BA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAG,UAACX,KAAD,EAAiC;EAAA,IAAzB;IAACnB,MAAM,GAAG;EAAV,CAAyB,uEAAP,EAAO;;EAChD,IAAI,OAAOmB,KAAP,KAAiB,QAArB,EAA+B;IAC3B,MAAMY,WAAW,GAAGhC,iBAAiB,CAACC,MAAD,CAArC;IACA,OAAO+B,WAAW,CAACZ,KAAD,CAAlB;EACH,CAHD,MAGO,IAAIa,MAAM,CAACC,QAAP,CAAgBd,KAAhB,CAAJ,EAA4B;IAC/B,OAAOA,KAAP;EACH;;EACD,OAAOU,GAAP;AACH,CARD;;AAUAK,MAAM,CAACC,OAAP,GAAiBL,UAAjB"}]}