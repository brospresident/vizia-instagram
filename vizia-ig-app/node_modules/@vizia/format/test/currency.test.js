'use strict';

const test = require('ava');

const viziaFormat = require('../src');

/**
 * Currency default behaviour
 */

test('Currency defaults: Int', (t) => {
    t.is(
        viziaFormat(1234, {format: 'currency'}),
        '$1,234',
        'renders as positive number with no decimal point'
    );
});

test('Currency defaults: Float with 1 decimal point', (t) => {
    t.is(
        viziaFormat(1234.1, {format: 'currency'}),
        '$1,234.10',
        'renders as positive currency with 2 decimal points'
    );
});

test('Currency defaults: Float with more than 1 decimal point', (t) => {
    t.is(
        viziaFormat(1234.1234, {format: 'currency'}),
        '$1,234.12',
        'renders as positive currency with 2 decimal points'
    );
});

test('Currency defaults: Negative float', (t) => {
    t.is(
        viziaFormat(-1234.1234, {format: 'currency'}),
        '−$1,234.12',
        'renders as negative currency with 2 decimal points'
    );
});

test('Currency defaults: Large positive float', (t) => {
    t.is(
        viziaFormat(12345.12345, {format: 'currency'}),
        '$12.35K',
        'renders as positive abbreviated currency with 2 decimal points'
    );
});

test('Currency defaults: Large negative float', (t) => {
    t.is(
        viziaFormat(-12345.12345, {format: 'currency'}),
        '−$12.35K',
        'renders as negative abbreviated currency with 2 decimal points'
    );
});

test('Currency defaults: Float equal to the default abbreviated threshold', (t) => {
    t.is(
        viziaFormat(9999.5, {format: 'currency'}),
        '$10K',
        'renders as abbreviated currency'
    );
});

/**
 * Currency overrides
 */
test('Currency: Using custom mantissa', (t) => {
    t.is(
        viziaFormat(1234.1234, {format: 'currency', mantissa: 3}),
        '$1,234.123',
        'renders as currency with 3 decimal points'
    );
});

test('Currency: Setting trimMantissa=true', (t) => {
    t.is(
        viziaFormat(1234.1, {format: 'currency', trimMantissa: true}),
        '$1,234.10',
        'ignores option and renders as currency with 2 decimal points'
    );
});

test('Currency: Setting abbr=false', (t) => {
    t.is(
        viziaFormat(12345.1234, {format: 'currency', abbr: false}),
        '$12,345.12',
        'renders as unabbreviated currency'
    );
});

test('Currency: Using custom abbrThreshold', (t) => {
    t.is(
        viziaFormat(999, {format: 'currency', abbrThreshold: 1000}),
        '$999',
        'renders as unabbreviated currency'
    );
    t.is(
        viziaFormat(1000, {format: 'currency', abbrThreshold: 1000}),
        '$1K',
        'renders as abbreviated currency'
    );
});

test('Currency: Using a currency code', (t) => {
    t.is(
        viziaFormat(1234.12, {format: 'currency', currency: 'GBP'}),
        '£1,234.12',
        'renders as currency with correct symbol'
    );
});

test('Currency: Using a currency symbol', (t) => {
    t.is(
        viziaFormat(1234.12, {format: 'currency', currencySymbol: '€'}),
        '€1,234.12',
        'renders as currency with correct symbol'
    );
});
