{"remainingRequest":"/Users/pantu/.npm/_npx/9438/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/pantu/.npm/_npx/9438/lib/node_modules/@vizia/app-emulator/node_modules/string_decoder/lib/string_decoder.js","dependencies":[{"path":"/Users/pantu/.npm/_npx/9438/lib/node_modules/@vizia/app-emulator/node_modules/string_decoder/lib/string_decoder.js","mtime":499162500000},{"path":"/Users/pantu/.npm/_npx/9438/lib/node_modules/@vizia/app-emulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pantu/.npm/_npx/9438/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Buffer","require","isEncoding","encoding","toLowerCase","_normalizeEncoding","enc","retried","normalizeEncoding","nenc","Error","exports","StringDecoder","nb","text","utf16Text","end","utf16End","fillLast","utf8FillLast","base64Text","base64End","write","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","prototype","buf","length","r","i","undefined","utf8End","utf8Text","copy","toString","utf8CheckByte","byte","utf8CheckIncomplete","self","j","utf8CheckExtraBytes","p","total","c","charCodeAt","slice","n"],"sources":["/Users/pantu/.npm/_npx/9438/lib/node_modules/@vizia/app-emulator/node_modules/string_decoder/lib/string_decoder.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}"],"mappings":"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"}]}